---
import NarrowLayout from "@layouts/NarrowLayout.astro"
import SkillsSection from "@components/SkillsSection.astro"
import IconContainer from "@components/IconContainer.astro"

import { Image } from "astro:assets"
import Link from "@components/Link.astro"

import Duolingo from "@assets/icons/duolingo.astro"

import cartaLogo from "@assets/images/carta.svg"
import modelUnpricedRounds from "@assets/images/model-unpriced-rounds.gif"
import funAtParties from "@assets/images/fun-at-parties.svg"
import ProjectCard from "@components/ProjectCard.astro"
import React from "@assets/icons/react.astro"
import Tailwind from "@assets/icons/tailwind.astro"

let showDuolingo = true

async function getDuolingoStreak() {
  const url = "https://www.duolingo.com/2017-06-30/users/1102654541"
  try {
    const response = await fetch(url)
    if (!response.ok) {
      showDuolingo = false
    }

    const json = await response.json()
    return json.streak
  } catch (error) {
    showDuolingo = false
  }
}

const duolingoStreak = await getDuolingoStreak()
---

<NarrowLayout>
  <div class="bg-light-glow-accent pb-20 pt-20 flex flex-col items-center justify-center">
    <h1 class="block text-4xl font-light">
      Hi <span class="inline-block animate-wave hover:animate-wave-infinite origin-[75%_75%]">ðŸ‘‹</span> I'm
      <span class="relative">
        <svg
          width="576"
          height="193"
          viewBox="0 0 576 193"
          version="1.1"
          class="absolute left-0 top-[-18px] z-0 block w-[250px]"
        >
          <defs>
            <linearGradient id="linear" x1="0%" y1="0%" x2="100%" y2="0%">
              <stop offset="0%" stop-color="#e6c75f"></stop>
              <stop offset="100%" stop-color="#e65f5f"></stop>
            </linearGradient>
          </defs>

          <path
            fill="transparent"
            stroke="url(#linear)"
            stroke-width="4"
            d="M2.75003 7.00006C26.75 1.99994 69.5 2 128.5 2C322.5 2.00024 324.75 12.0002 128.75 12.0002C-40.25 12.0002 -40.25 24 128.75 24C256.75 24 270.75 18 270.75 18"
            class="animate-dash [stroke-dasharray:820] [stroke-dashoffset:0]"
          ></path>
        </svg>
        <span
          class="relative z-10 bg-gradient-accent bg-clip-text text-transparent"
          >Krystof</span
        >
      </span>
    </h1>
    <p class="text-2xl text-zinc-400"><em>Fullstack software engineer</em></p>
  </div>
  <section class="mt-10 mb-16">
    <p class="mb-3 text-lg leading-8 text-zinc-400"></p>
    <p class="mb-3 text-lg leading-8 text-zinc-400">
      I'm a software engineer with most experience in <strong
        class="font-medium text-zinc-100">fullstack web development</strong
      >. I have a detail-oriented approach and always strive to find the
      simplest solution.
    </p>
    <p class="text-lg leading-8 text-zinc-400">
      Find out more about my <Link href="#professional-contributions">professional contributions</Link><span>, </span><Link href="#projects">hobby project</Link>, <Link href="#skills">skills</Link> and <span class="relative"><Link href="#general-fun"><Image class="absolute left-[10px] top-[18px]" src={funAtParties} alt="I'm fun at parties" /></a><Link href="#general">me in general</Link></span>
      below or just have a look at <Link
        target="_blank"
        href="https://laegas.github.io/cv/typst/cv.pdf">my CV</Link
      >.
    </p>
  </section>
  <section class="my-10">
    <h2 id="professional-contributions" class="mb-2 text-2xl font-semibold">Professional contributions</h2>
    <hr class="mb-6 border-zinc-600" />
    <div class="flex flex-col items-center justify-center gap-1 mb-2">
      <div class="flex items-center">
        <Image class="h-8 w-auto" src={cartaLogo} alt="Carta logo" />
        <h3 class="text-xl font-semibold">&nbsp;-&nbsp;Carta</h3>
      </div>
      <span class="text-zinc-400">
        2022-2025
      </span>
    </div>
    <p class="mb-3 text-lg leading-8 text-zinc-400">A few examples of some of my more unique contributions follows:</p>
    <h4 class="mb-1 text-lg font-semibold">
      <Link
        target="_blank"
        href="https://www.app.europe.carta.com/convertible_securities_calculator/?skip=true"
        >Public calculator page</Link
      >
    </h4>
    <p class="mb-3 text-lg leading-8 text-zinc-400">
      I have created a public page with a calculator to model unpriced rounds.
      The solution involved an <abbr title="Request For Comments">RFC</abbr> to come
      up with the best solution as this was the first public page (i.e. not behind
      auth, obviously excluding a sign in/sign up flow). At the time we were also in a rebranding
      transition where the homepage was already transitioned and the idea was to
      use the new design on all public facing pages so the calculator should also
      follow the new design. It uses many primitive components and other more complex
      components some of which I helped building. <Link
        target="_blank"
        href="https://www.app.europe.carta.com/convertible_securities_calculator/?skip=true"
        >Check it out for yourself!</Link
      > See an example usage below:
    </p>
    <Image src={modelUnpricedRounds} alt="Model unpriced rounds" />

    <h3 class="mb-1 text-xl font-semibold">Capdesk</h3>
  </section>
  <section class="my-10 mb-6">
    <h2 id="hobby-project" class="mb-2 text-2xl font-semibold">Hobby project</h2>
    <hr class="border-zinc-600" />
    <!-- TODO: Link to the project, add Git -->
    <ProjectCard projectTitle="HabitVille" projectDescription="Hobby project for tracking habits and gamifying it in a tycoon-game. Started with a web app, now working on iOS mobile app." projectLink="https://github.com/Laegas/habitville" githubLink="https://github.com/Laegas/habitville">
      <React />
      <Tailwind />
    </ProjectCard>
  </section>
  {
    showDuolingo && (
      <IconContainer name="Duolingo ðŸ‡°ðŸ‡·">
        <div class="relative w-12">
          <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-3/4 text-sm text-black">
            <span id="duolingo-streak">{duolingoStreak}</span>
          </div>
          <Duolingo size="size-12" />
        </div>
      </IconContainer>
    )
  }

  <SkillsSection />
</NarrowLayout>

<script is:inline>
  function getDuolingoStreak() {
    const url = "https://www.duolingo.com/2017-06-30/users/1102654541"
    try {
      const response = fetch(url).then(res => {
        res.json().then(json => {
          document.getElementById("duolingo-streak").innerText = json.streak
        })
      })
      
    } catch (error) {}
  }

  getDuolingoStreak()
</script>